resources:
- '@type': type.googleapis.com/envoy.config.listener.v3.Listener
  address:
    socket_address:
      address: 0.0.0.0
      port_value: 8080
  filter_chains:
  - filters:
      name: envoy.filters.network.http_connection_manager
      typed_config:
        '@type': type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
        codec_type: auto
        http_filters:
        - name: envoy.filters.http.jwt_authn
          typed_config:
            '@type': type.googleapis.com/envoy.extensions.filters.http.jwt_authn.v3.JwtAuthentication
            providers:
              emulator-jwt:
                audiences:
                - android.emulation.control.EmulatorController
                issuer: android-emulator@jwt-provider.py
                local_jwks:
                  filename: /etc/jwt_secrets_pub.jwks
            rules:
            - match:
                safe_regex:
                  google_re2: {}
                  regex: \/instance\/\d\/android.emulation.control.EmulatorController
              requires:
                provider_name: emulator-jwt
        - name: envoy.filters.http.grpc_web
        - name: envoy.filters.http.cors
        - name: envoy.filters.http.router
        route_config:
          name: local_route
          virtual_hosts:
          - cors:
              allow_headers: keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,custom-header-1,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout
              allow_methods: GET, PUT, DELETE, POST, OPTIONS
              allow_origin:
              - '*'
              expose_headers: custom-header-1,grpc-status,grpc-message
              max_age: '1728000'
            domains:
            - '*'
            name: local_service
            routes:
            - match:
                safe_regex:
                  google_re2: {}
                  regex: \/instance\/\d+\/token
              route:
                cluster: backend
                prefix_rewrite: /token
            - match:
                safe_regex:
                  google_re2: {}
                  regex: \/instance\/\d+
              route:
                cluster: nginx
                prefix_rewrite: /
            - match:
                prefix: /static/
              route:
                cluster: nginx
            - match:
                prefix: /resource/
              route:
                cluster: backend-resource
            - match:
                prefix: /
              route:
                cluster: backend
        stat_prefix: ingress_http
        use_remote_address: true
  name: listener_1
